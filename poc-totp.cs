
/**
    author: alfonso soria mu√±oz - Tecnosor
    Mit license
    Proof Of Concept: POC
    Test TOPT for MFA integration with microsoft or google autenticator apps for .net websites.
*/
using System.Text;
using OtpNet;
using Net.Codecrete.QrCodeGenerator;

// Generate a random key
var key = KeyGeneration.GenerateRandomKey(20);

// Convert the key to Base32 string and bytes
var base32String = Base32Encoding.ToString(key);
var base32Bytes = Base32Encoding.ToBytes(base32String);

// Define constants for OTP settings
const OtpHashMode HASH_ALG = OtpHashMode.Sha512;
const int ROTATION_TIME = 30;
const int TOKEN_CODE_LENGHT = 6;

// Initialize a TOTP object with the generated key and settings
var totp = new Totp(secretKey: base32Bytes,
                    mode: HASH_ALG,
                    step: ROTation_Time,
                    totpSize: TOKEN_CODE_LENGHT,
                    timeCorrection: null);

// Generate an OTP URI string for QR code encoding
var uri = new OtpUri(schema:OtpType.Totp,
                     secret: base32Bytes,
                     user:"user test",
                     issuer:"Tecnosor",
                     algorithm:HASH_ALG,
                     digits:TOKEN_CODE_LENGHT,
                     period:ROTATION_TIME);

// Encode the OTP URI string as a QR code
var qr = QrCode.EncodeText(uri.ToString(), QrCode.Ecc.Medium);

// Convert the QR code to SVG and write it to a file
string svg = qr.ToSvgString(4);
File.WriteAllText("test.svg", svg, Encoding.UTF8);

Console.WriteLine("Write here your TOPT code generated by authenticator app:");

// Read the user's input from the console
string code = Console.ReadLine() ?? "";

// Verify the entered code against the TOTP object
long window;
if (totp.VerifyTotp(code,out window))
{
    Console.WriteLine($"Code is OK! Window {window}");
}
else
{
    Console.WriteLine("Error. Codigo incorrecto");
}

// Now, predict future codes...
Console.WriteLine("Now, predict future codes");
while(true)
{
    // Compute the next TOTP code based on the current time
    var totpcode = totp.ComputeTotp(DateTime.UtcNow);

    // Write the predicted code to the console
    Console.WriteLine($"Autenticator code is: {totpcode}");

    // Sleep for the rotation time (in milliseconds)
    Thread.Sleep(ROTATION_TIME*1,000);
}
